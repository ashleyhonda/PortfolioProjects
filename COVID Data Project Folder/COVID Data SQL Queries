USE PortfolioProject;

SELECT * 
FROM CovidDeaths
ORDER BY 3, 4; 

SELECT * 
FROM CovidVaccinations
ORDER BY 3, 4; 

SELECT 
  location, 
  date, 
  total_cases, 
  new_cases, 
  total_deaths, 
  population
FROM 
  PortfolioProject..CovidDeaths
ORDER BY 
  1,
  2; 

-- Looking at Total Cases vs Total Deaths
-- Shows likelihood of dying if you have covid in your country
SELECT
  location,
  date,
  total_cases,
  total_deaths,
  ROUND(((total_deaths/total_cases) * 100),2) as death_percentage
FROM 
  PortfolioProject..CovidDeaths
WHERE 
  continent is not null 
ORDER BY 
  location, 
  date;

-- Looking at Total Cases vs Population
-- shows what percentage of population got covid since 2020
SELECT
  location,
  date,
  population,
  total_cases,
  ROUND(((total_cases/population) * 100),2) as covid_percentage
FROM 
  PortfolioProject..CovidDeaths
ORDER BY 
  1,
  2;

-- Looking at countries with highest infection rate compared to population
SELECT 
  location, 
  population, 
  MAX(total_cases) as max_total_cases, 
  MAX((total_cases/population))*100 as covid_percentage
FROM 
  CovidDeaths
GROUP BY  
  location, population
ORDER BY 
  covid_percentage desc;

-- Showing countries with the highest death count population
SELECT 
  location, 
  MAX(total_deaths) as TotalDeathCount
FROM 
  CovidDeaths
WHERE 
  continent is not null
GROUP BY  
  location
ORDER BY 
  TotalDeathCount desc;

-- Filtering by Continent

-- Showing continents with the highest death count per population
SELECT 
  continent, 
  MAX(total_deaths) as TotalDeathCount
FROM 
  CovidDeaths
WHERE 
  continent is not null
GROUP BY 
  continent
ORDER BY 
  TotalDeathCount desc;

-- Global Numbers

-- Looking at death percentage from 2020 to 2023 across the world
Select 
  SUM(new_cases) as total_cases, 
  SUM(new_deaths) as total_deaths, 
  (SUM(new_deaths)/SUM(New_Cases))*100 as DeathPercentage
From 
  CovidDeaths
where 
  continent is not null 
--Group By date
order by 
  1,
  2;

-- Looking at Death Percentage across the world each year
SELECT
  YEAR(date) AS calendar_year,
  SUM(new_cases) AS s_total_cases,
  SUM(new_deaths) AS s_total_deaths,
 SUM(new_deaths)/SUM(new_cases) * 100 as death_percentage
FROM 
  CovidDeaths
GROUP BY 
  YEAR(date)
ORDER BY 
  YEAR(date);

-- Looking at total population vs vaccination
-- Showing how many are vaccinated compared to population
With PopvsVac (
  Continent, 
  Location, 
  Date, 
  Population, 
  New_Vaccinations, 
  RollingPeopleVaccinated
)
as
(
Select 
  dea.continent, 
  dea.location, 
  dea.date, dea.population, 
  vac.new_vaccinations, 
  SUM(CONVERT(bigint,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) as RollingPeopleVaccinated
From 
  PortfolioProject..CovidDeaths dea
Join 
  PortfolioProject..CovidVaccinations vac
	On 
    dea.location = vac.location
	and 
    dea.date = vac.date
where 
  dea.continent is not null 
)
Select *, 
  (RollingPeopleVaccinated/Population)*100
From 
  PopvsVac

--Temp Table instead of CTE
DROP Table if exists #PercentPopulationVaccinated
Create Table #PercentPopulationVaccinated
(
Continent nvarchar(255),
Location nvarchar(255),
Date datetime,
Population numeric,
New_vaccinations numeric,
RollingPeopleVaccinated numeric
)

Insert into #PercentPopulationVaccinated
Select 
  dea.continent, 
  dea.location, 
  dea.date, 
  dea.population, 
  vac.new_vaccinations, 
  SUM(CONVERT(bigint,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
From 
  PortfolioProject..CovidDeaths dea
Join 
  PortfolioProject..CovidVaccinations vac
	On 
    dea.location = vac.location
	and 
    dea.date = vac.date


Select *, (RollingPeopleVaccinated/Population)*100
From #PercentPopulationVaccinated;

-- CREATE VIEW

CREATE VIEW PercentPopulationVaccinated as
Select 
  dea.continent, 
  dea.location, 
  dea.date, 
  dea.population, 
  vac.new_vaccinations, 
  SUM(CONVERT(bigint,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
From 
  PortfolioProject..CovidDeaths dea
Join 
  PortfolioProject..CovidVaccinations vac
	On 
    dea.location = vac.location
	and 
    dea.date = vac.date
where 
    dea.continent is not null 


CREATE VIEW CasevsPop AS
SELECT
  location,
  date,
  population,
  total_cases,
  ROUND(((total_cases/population) * 100),2) as covid_percentage
FROM 
  PortfolioProject..CovidDeaths
;


CREATE VIEW visual1 as
Select 
  SUM(new_cases) as total_cases, 
  SUM(cast(new_deaths as int)) as total_deaths, 
  SUM(cast(new_deaths as int))/SUM(New_Cases)*100 as DeathPercentage
From 
  PortfolioProject..CovidDeaths
where 
  continent is not null;

CREATE VIEW visual2 as 
Select 
  location, 
  SUM(cast(new_deaths as int)) as TotalDeathCount
From 
  CovidDeaths
Where 
  continent is null 
and 
  location not in ('World', 'European Union', 'International', 'High income', 'Upper middle income', 'Lower middle income', 'Low income')
GROUP BY 
  location;

CREATE VIEW visual3 as
Select 
  Location, 
  Population, 
  MAX(total_cases) as HighestInfectionCount,  
  Max((total_cases/population))*100 as PercentPopulationInfected
From 
  PortfolioProject..CovidDeaths
Group by 
  Location, 
  Population;

CREATE VIEW visual4 as
Select 
  Location, 
  Population,
  date, 
  MAX(total_cases) as HighestInfectionCount,  
  Max((total_cases/population))*100 as PercentPopulationInfected
From 
  PortfolioProject..CovidDeaths
Group by 
  Location, Population, date;

CREATE VIEW visual5 as
SELECT
  YEAR(date) AS calendar_year,
  SUM(new_cases) AS s_total_cases,
  SUM(new_deaths) AS s_total_deaths,
 SUM(new_deaths)/SUM(new_cases) * 100 as death_percentage
FROM 
  CovidDeaths
GROUP BY 
  YEAR(date);
